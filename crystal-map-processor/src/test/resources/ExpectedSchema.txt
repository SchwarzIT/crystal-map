// DO NOT EDIT THIS FILE.
// Generated using Crystal-Map
//
// Do not edit this class!!!!.
//
package com.kaufland.testModels

import com.schwarz.crystalapi.schema.CMConverterField
import com.schwarz.crystalapi.schema.CMConverterList
import com.schwarz.crystalapi.schema.CMField
import com.schwarz.crystalapi.schema.CMList
import com.schwarz.crystalapi.schema.CMObject
import com.schwarz.crystalapi.schema.CMObjectList
import com.schwarz.crystalapi.schema.Schema
import java.time.OffsetDateTime
import kotlin.Number
import kotlin.String

public open class SubSchema(
  path: String = "",
) : Schema {
  public val DEFAULT_TYPE: String = "test"

  public val type: CMField<String> = CMField("type", path)

  public val testTestTest: CMField<Number> = CMField("test_test_test", path)

  public val list: CMList<String> = CMList("list", path)

  public val someObject: CMObject<TestObjectSchema> = CMObject(
                  com.kaufland.testModels.TestObjectSchema(if (path.isBlank()) "someObject" else
          "$path.someObject"),
                  path,
              )

  public val objects: CMObjectList<TestObjectSchema> = CMObjectList(
                  com.kaufland.testModels.TestObjectSchema(if (path.isBlank()) "objects" else
          "$path.objects"),
                  "objects",
                  path,
              )

  public val dateConverterField: CMConverterField<OffsetDateTime, String> =
      CMConverterField("date_converter_field", path,
      com.kaufland.testModels.DateTypeConverterInstance)

  public val dateConverterList: CMConverterList<OffsetDateTime, String> =
      CMConverterList("date_converter_list", path,
      com.kaufland.testModels.DateTypeConverterInstance)
}