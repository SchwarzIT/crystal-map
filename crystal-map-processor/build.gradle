import org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'kotlin-kapt'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.squareup:kotlinpoet:1.14.2'
    implementation 'com.squareup:kotlinpoet-metadata:1.14.2'
    implementation project(path: ':crystal-map-api', configuration: 'default')
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.14.3"
    implementation 'com.j2html:j2html:1.6.0'
    testImplementation 'com.google.testing.compile:compile-testing:0.21.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.tschuchortdev:kotlin-compile-testing:1.5.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    kapt "com.google.auto.service:auto-service:1.1.1"
    compileOnly "com.google.auto.service:auto-service:1.1.1"
}

kapt {
    correctErrorTypes true
    kapt
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.register('sourcesJar', Jar) {
    dependsOn classes


    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    group 'verification'
    dependsOn 'test'

    reports {

        xml.required = true
        html.required = false
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}